@use '../generators/breakpoints' as *;
/*

  FLEXBOX

  Also includes properties common with Gap: Order, Justify, Align, and Place.

*/
@include generate-breakpoints {
  .flex#{$bkpt-suffix} {
    display: flex;
  }
  .inline-flex#{$bkpt-suffix} {
    display: inline-flex;
  }

  /* flex-* */
  .flex-column#{$bkpt-suffix} {
    flex-direction: column;
  }
  .flex-row#{$bkpt-suffix} {
    flex-direction: row;
  }
  .flex-column-reverse#{$bkpt-suffix} {
    flex-direction: column-reverse;
  }
  .flex-row-reverse#{$bkpt-suffix} {
    flex-direction: row-reverse;
  }

  .flex-wrap#{$bkpt-suffix} {
    flex-wrap: wrap;
  }
  .flex-nowrap#{$bkpt-suffix} {
    flex-wrap: nowrap;
  }
  .flex-wrap-reverse#{$bkpt-suffix} {
    flex-wrap: wrap-reverse;
  }
  .flex-1#{$bkpt-suffix} {
    flex: 1 1 0%;
  }
  .flex-auto#{$bkpt-suffix} {
    flex: 1 1 auto;
  }
  .flex-inital#{$bkpt-suffix} {
    flex: 0 1 auto;
  }
  .flex-none#{$bkpt-suffix} {
    flex: none;
  }

  .grow#{$bkpt-suffix} {
    flex-grow: 1;
  }
  .grow-0#{$bkpt-suffix} {
    flex-grow: 0;
  }

  .shrink#{$bkpt-suffix} {
    flex-shrink: 1;
  }
  .shrink-0#{$bkpt-suffix} {
    flex-shrink: 0;
  }

  /* Order */
  .order-first#{$bkpt-suffix} {
    order: -9999;
  }
  .order-0#{$bkpt-suffix} {
    order: 0;
  }
  .order-1#{$bkpt-suffix} {
    order: 1;
  }
  .order-2#{$bkpt-suffix} {
    order: 2;
  }
  .order-3#{$bkpt-suffix} {
    order: 3;
  }
  .order-4#{$bkpt-suffix} {
    order: 4;
  }
  .order-5#{$bkpt-suffix} {
    order: 5;
  }
  .order-6#{$bkpt-suffix} {
    order: 6;
  }
  .order-7#{$bkpt-suffix} {
    order: 7;
  }
  .order-8#{$bkpt-suffix} {
    order: 8;
  }
  .order-9#{$bkpt-suffix} {
    order: 9;
  }
  .order-10#{$bkpt-suffix} {
    order: 10;
  }
  .order-11#{$bkpt-suffix} {
    order: 11;
  }
  .order-12#{$bkpt-suffix} {
    order: 12;
  }
  .order-last#{$bkpt-suffix} {
    order: 99999;
  }

  /* justify-* */
  .justify-normal#{$bkpt-suffix} {
    justify-content: normal;
  }
  .justify-start#{$bkpt-suffix} {
    justify-content: flex-start;
  }
  .justify-end#{$bkpt-suffix} {
    justify-content: flex-end;
  }
  .justify-center#{$bkpt-suffix} {
    justify-content: center;
  }
  .justify-between#{$bkpt-suffix} {
    justify-content: space-between;
  }
  .justify-around#{$bkpt-suffix} {
    justify-content: space-around;
  }
  .justify-evenly#{$bkpt-suffix} {
    justify-content: space-evenly;
  }
  .justify-stretch#{$bkpt-suffix} {
    justify-content: space-stretch;
  }

  .justify-items-normal#{$bkpt-suffix} {
    justify-items: normal;
  }
  .justify-items-start#{$bkpt-suffix} {
    justify-items: start;
  }
  .justify-items-end#{$bkpt-suffix} {
    justify-items: end;
  }
  .justify-items-center#{$bkpt-suffix} {
    justify-items: center;
  }
  .justify-items-stretch#{$bkpt-suffix} {
    justify-items: stretch;
  }

  .justify-self-auto#{$bkpt-suffix} {
    justify-self: auto;
  }
  .justify-self-start#{$bkpt-suffix} {
    justify-self: start;
  }
  .justify-self-end#{$bkpt-suffix} {
    justify-self: end;
  }
  .justify-self-center#{$bkpt-suffix} {
    justify-self: center;
  }
  .justify-self-stretch#{$bkpt-suffix} {
    justify-self: stretch;
  }

  /* align-* */
  .content-normal#{$bkpt-suffix} {
    align-content: normal;
  }
  .content-start#{$bkpt-suffix} {
    align-content: flex-start;
  }
  .content-end#{$bkpt-suffix} {
    align-content: flex-end;
  }
  .content-center#{$bkpt-suffix} {
    align-content: center;
  }
  .content-between#{$bkpt-suffix} {
    align-content: space-between;
  }
  .content-around#{$bkpt-suffix} {
    align-content: space-around;
  }
  .content-evenly#{$bkpt-suffix} {
    align-content: space-evenly;
  }
  .content-baseline#{$bkpt-suffix} {
    align-content: space-baseline;
  }
  .content-stretch#{$bkpt-suffix} {
    align-content: stretch;
  }

  .items-start#{$bkpt-suffix} {
    align-items: start;
  }
  .items-end#{$bkpt-suffix} {
    align-items: end;
  }
  .items-center#{$bkpt-suffix} {
    align-items: center;
  }
  .items-baseline#{$bkpt-suffix} {
    align-items: baseline;
  }
  .items-stretch#{$bkpt-suffix} {
    align-items: stretch;
  }

  .self-auto#{$bkpt-suffix} {
    align-self: flex-auto;
  }
  .self-start#{$bkpt-suffix} {
    align-self: flex-start;
  }
  .self-end#{$bkpt-suffix} {
    align-self: flex-end;
  }
  .self-center#{$bkpt-suffix} {
    align-self: center;
  }
  .self-baseline#{$bkpt-suffix} {
    align-self: baseline;
  }
  .self-stretch#{$bkpt-suffix} {
    align-self: stretch;
  }

  /* place-* */
  .place-content-start#{$bkpt-suffix} {
    place-content: start;
  }
  .place-content-end#{$bkpt-suffix} {
    place-content: end;
  }
  .place-content-center#{$bkpt-suffix} {
    place-content: center;
  }
  .place-content-between#{$bkpt-suffix} {
    place-content: space-between;
  }
  .place-content-around#{$bkpt-suffix} {
    place-content: space-around;
  }
  .place-content-evenly#{$bkpt-suffix} {
    place-content: space-evenly;
  }
  .place-content-baseline#{$bkpt-suffix} {
    place-content: baseline;
  }
  .place-content-stretch#{$bkpt-suffix} {
    place-content: stretch;
  }

  .place-items-start#{$bkpt-suffix} {
    place-items: start;
  }
  .place-items-end#{$bkpt-suffix} {
    place-items: end;
  }
  .place-items-center#{$bkpt-suffix} {
    place-items: center;
  }
  .place-items-baseline#{$bkpt-suffix} {
    place-items: baseline;
  }
  .place-items-stretch#{$bkpt-suffix} {
    place-items: stretch;
  }

  .place-self-auto#{$bkpt-suffix} {
    place-self: auto;
  }
  .place-self-start#{$bkpt-suffix} {
    place-self: start;
  }
  .place-self-end#{$bkpt-suffix} {
    place-self: end;
  }
  .place-self-center#{$bkpt-suffix} {
    place-self: center;
  }
  .place-self-stretch#{$bkpt-suffix} {
    place-self: stretch;
  }
}
